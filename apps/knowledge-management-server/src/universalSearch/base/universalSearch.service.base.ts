/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  UniversalSearch as PrismaUniversalSearch,
} from "@prisma/client";

export class UniversalSearchServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UniversalSearchCountArgs, "select">
  ): Promise<number> {
    return this.prisma.universalSearch.count(args);
  }

  async universalSearches<T extends Prisma.UniversalSearchFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UniversalSearchFindManyArgs>
  ): Promise<PrismaUniversalSearch[]> {
    return this.prisma.universalSearch.findMany<Prisma.UniversalSearchFindManyArgs>(
      args
    );
  }
  async universalSearch<T extends Prisma.UniversalSearchFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UniversalSearchFindUniqueArgs>
  ): Promise<PrismaUniversalSearch | null> {
    return this.prisma.universalSearch.findUnique(args);
  }
  async createUniversalSearch<T extends Prisma.UniversalSearchCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UniversalSearchCreateArgs>
  ): Promise<PrismaUniversalSearch> {
    return this.prisma.universalSearch.create<T>(args);
  }
  async updateUniversalSearch<T extends Prisma.UniversalSearchUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UniversalSearchUpdateArgs>
  ): Promise<PrismaUniversalSearch> {
    return this.prisma.universalSearch.update<T>(args);
  }
  async deleteUniversalSearch<T extends Prisma.UniversalSearchDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UniversalSearchDeleteArgs>
  ): Promise<PrismaUniversalSearch> {
    return this.prisma.universalSearch.delete(args);
  }
}
