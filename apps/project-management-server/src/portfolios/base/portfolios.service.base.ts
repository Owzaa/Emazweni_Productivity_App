/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Portfolios as PrismaPortfolios } from "@prisma/client";

export class PortfoliosServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PortfoliosCountArgs, "select">
  ): Promise<number> {
    return this.prisma.portfolios.count(args);
  }

  async portfoliosItems<T extends Prisma.PortfoliosFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PortfoliosFindManyArgs>
  ): Promise<PrismaPortfolios[]> {
    return this.prisma.portfolios.findMany<Prisma.PortfoliosFindManyArgs>(args);
  }
  async portfolios<T extends Prisma.PortfoliosFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PortfoliosFindUniqueArgs>
  ): Promise<PrismaPortfolios | null> {
    return this.prisma.portfolios.findUnique(args);
  }
  async createPortfolios<T extends Prisma.PortfoliosCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PortfoliosCreateArgs>
  ): Promise<PrismaPortfolios> {
    return this.prisma.portfolios.create<T>(args);
  }
  async updatePortfolios<T extends Prisma.PortfoliosUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PortfoliosUpdateArgs>
  ): Promise<PrismaPortfolios> {
    return this.prisma.portfolios.update<T>(args);
  }
  async deletePortfolios<T extends Prisma.PortfoliosDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PortfoliosDeleteArgs>
  ): Promise<PrismaPortfolios> {
    return this.prisma.portfolios.delete(args);
  }
}
