/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CollaborationDocs as PrismaCollaborationDocs,
} from "@prisma/client";

export class CollaborationDocsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CollaborationDocsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.collaborationDocs.count(args);
  }

  async collaborationDocsItems<T extends Prisma.CollaborationDocsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CollaborationDocsFindManyArgs>
  ): Promise<PrismaCollaborationDocs[]> {
    return this.prisma.collaborationDocs.findMany<Prisma.CollaborationDocsFindManyArgs>(
      args
    );
  }
  async collaborationDocs<T extends Prisma.CollaborationDocsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CollaborationDocsFindUniqueArgs>
  ): Promise<PrismaCollaborationDocs | null> {
    return this.prisma.collaborationDocs.findUnique(args);
  }
  async createCollaborationDocs<T extends Prisma.CollaborationDocsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CollaborationDocsCreateArgs>
  ): Promise<PrismaCollaborationDocs> {
    return this.prisma.collaborationDocs.create<T>(args);
  }
  async updateCollaborationDocs<T extends Prisma.CollaborationDocsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CollaborationDocsUpdateArgs>
  ): Promise<PrismaCollaborationDocs> {
    return this.prisma.collaborationDocs.update<T>(args);
  }
  async deleteCollaborationDocs<T extends Prisma.CollaborationDocsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CollaborationDocsDeleteArgs>
  ): Promise<PrismaCollaborationDocs> {
    return this.prisma.collaborationDocs.delete(args);
  }
}
