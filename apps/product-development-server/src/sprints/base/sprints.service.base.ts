/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Sprints as PrismaSprints } from "@prisma/client";

export class SprintsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SprintsCountArgs, "select">): Promise<number> {
    return this.prisma.sprints.count(args);
  }

  async sprintsItems<T extends Prisma.SprintsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SprintsFindManyArgs>
  ): Promise<PrismaSprints[]> {
    return this.prisma.sprints.findMany<Prisma.SprintsFindManyArgs>(args);
  }
  async sprints<T extends Prisma.SprintsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SprintsFindUniqueArgs>
  ): Promise<PrismaSprints | null> {
    return this.prisma.sprints.findUnique(args);
  }
  async createSprints<T extends Prisma.SprintsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SprintsCreateArgs>
  ): Promise<PrismaSprints> {
    return this.prisma.sprints.create<T>(args);
  }
  async updateSprints<T extends Prisma.SprintsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SprintsUpdateArgs>
  ): Promise<PrismaSprints> {
    return this.prisma.sprints.update<T>(args);
  }
  async deleteSprints<T extends Prisma.SprintsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SprintsDeleteArgs>
  ): Promise<PrismaSprints> {
    return this.prisma.sprints.delete(args);
  }
}
